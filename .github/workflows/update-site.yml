name: Update Site and Deploy to GitHub Pages

on:
  schedule:
    # 每天北京时间早上 9 点 (UTC 1点) 自动更新
    - cron: '0 1 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # 允许手动触发

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 更新网站内容
  update-content:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Update last modified time
      run: |
        # 更新HTML中的时间戳
        current_time=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M')
        echo "更新时间: $current_time"
        
        # 使用sed更新index.html中的时间
        sed -i "s|<p id=\"last-update\" class=\"last-update\">--</p>|<p id=\"last-update\" class=\"last-update\">$current_time</p>|g" index.html
        
        # 更新统计数据（模拟数据增长）
        # 活跃用户数增加随机数
        current_users=$(grep -o 'data-count="[0-9]*"' index.html | head -1 | grep -o '[0-9]*')
        new_users=$((current_users + $RANDOM % 1000 + 100))
        sed -i "s|data-count=\"$current_users\"|data-count=\"$new_users\"|" index.html
        
        # 对话次数增加随机数
        current_chats=$(grep -o 'data-count="[0-9]*"' index.html | sed -n '2p' | grep -o '[0-9]*')
        new_chats=$((current_chats + $RANDOM % 10000 + 1000))
        sed -i "s|data-count=\"$current_chats\"|data-count=\"$new_chats\"|2" index.html
        
        echo "统计数据已更新"
    
    - name: Update README with latest info
      run: |
        cat > README.md << 'EOF'
        # Grok AI - 智能对话助手

        🤖 一个现代化、美观的 AI 对话助手展示页面

        ## 🌟 特性

        - 📱 响应式设计，完美适配各种设备
        - 🎨 现代化 UI 设计，渐变色彩和动画效果
        - ⚡ 轻量级，快速加载
        - 🔄 每天自动更新内容
        - 📊 实时统计数据展示
        - 🌙 平滑滚动和交互效果

        ## 🛠️ 技术栈

        - HTML5
        - CSS3 (Grid, Flexbox, 动画)
        - JavaScript (ES6+)
        - GitHub Actions (自动化)
        - GitHub Pages (部署)

        ## 🚀 快速开始

        1. Fork 这个仓库
        2. 启用 GitHub Pages (Settings > Pages > Source: GitHub Actions)
        3. 等待自动部署完成

        ## 📈 自动更新

        - 每天早上 9:00 (北京时间) 自动更新
        - 更新内容包括：时间戳、统计数据等
        - 支持手动触发更新

        ## 🎯 在线预览

        访问: [GitHub Pages 部署地址]

        ## 📝 自定义

        - 修改 `index.html` 更新页面内容
        - 编辑 `styles.css` 调整样式
        - 更新 `script.js` 添加功能
        - 配置 `.github/workflows/update-site.yml` 调整自动化

        ## 📄 许可证

        MIT License

        ---

        ⭐ 如果这个项目对您有帮助，请给个 Star！

        最后更新: $(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M')
        EOF
        
        echo "README 已更新"
    
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if [ -n "$(git status --porcelain)" ]; then
          git add .
          git commit -m "🤖 Auto-update: $(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M')"
          git push
          echo "Changes committed and pushed"
        else
          echo "No changes to commit"
        fi

  # 部署到 GitHub Pages
  deploy:
    needs: update-content
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: main  # 确保获取最新的更改
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        # 上传整个仓库
        path: '.'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 